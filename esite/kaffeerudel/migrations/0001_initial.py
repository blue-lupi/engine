# Generated by Django 2.2.13 on 2020-07-29 13:50

from django.db import migrations, models
import django.db.models.deletion
import esite.kaffeerudel.models
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks
import wagtail.snippets.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0045_assign_unlock_grouppagepermission'),
    ]

    operations = [
        migrations.CreateModel(
            name='KaffeerudelPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('sections', wagtail.core.fields.StreamField([('s_head', wagtail.core.blocks.StructBlock([('head', wagtail.core.blocks.CharBlock(blank=False, classname='full title', help_text='Bold header text', null=True, required=True)), ('lead', wagtail.core.blocks.CharBlock(blank=False, classname='full title', help_text='The content of this element', null=True, required=False))], blank=False, icon='fa-columns', null=True)), ('s_feature', wagtail.core.blocks.StructBlock([('features', wagtail.core.blocks.StreamBlock([('feature', wagtail.core.blocks.StructBlock([('feature_image', wagtail.images.blocks.ImageChooserBlock(blank=False, help_text='Icon representating the below content', null=True, required=True)), ('feature_head', wagtail.core.blocks.CharBlock(blank=False, classname='full title', help_text='The bold header text', null=True, required=False)), ('feature_lead', wagtail.core.blocks.CharBlock(blank=False, classname='full title', help_text='The content of this element', null=True, required=False))], blank=False, icon='fa-question', null=True, required=False))], null=True, required=False))], blank=False, icon='fa-info', null=True)), ('s_blue', wagtail.core.blocks.StructBlock([('blue_head', wagtail.core.blocks.CharBlock(blank=False, classname='full title', help_text='Bold header text', null=True, required=True)), ('blue_lead', wagtail.core.blocks.CharBlock(blank=False, classname='full title', help_text='The content of this element', null=True, required=False)), ('blue_button', wagtail.snippets.blocks.SnippetChooserBlock(esite.kaffeerudel.models.Button, blank=False, help_text='The button displayed at the frontpage slider', null=True, required=False))], blank=False, icon='fa-instagram', null=True)), ('s_images', wagtail.core.blocks.StructBlock([('image_img', wagtail.images.blocks.ImageChooserBlock(blank=False, help_text='Image fitting this step', null=True, required=False)), ('image_link', wagtail.core.blocks.URLBlock(blank=False, help_text='Important! Format https://www.domain.tld/xyz', null=True, required=False))], blank=False, icon='fa-list-ol', null=True)), ('s_instagram', wagtail.core.blocks.StructBlock([('instagram_id', wagtail.core.blocks.CharBlock(blank=False, classname='full', help_text='Instagram-Account id', null=True, required=False)), ('instagram_pc', wagtail.core.blocks.CharBlock(blank=False, classname='full', help_text='Instagram-Post count', null=True, required=False))], blank=False, icon='home', null=True)), ('s_faq', wagtail.core.blocks.StructBlock([('questions', wagtail.core.blocks.StreamBlock([('question', wagtail.core.blocks.StructBlock([('question_question', wagtail.core.blocks.CharBlock(blank=False, classname='full title', help_text='Bold header text', null=True, required=False)), ('question_answer', wagtail.core.blocks.RichTextBlock(blank=False, classname='full', help_text='Formatted text', null=True, required=False))], blank=False, icon='fa-question', null=True, required=False))], null=True, required=False))], blank=False, icon='fa-id-card-o', null=True)), ('s_ratings', wagtail.core.blocks.StructBlock([('ratings_count', wagtail.core.blocks.CharBlock(blank=False, classname='full', help_text='How many ratings will be displayed', null=True, required=False))], blank=False, icon='fa-coffee', null=True)), ('code', wagtail.core.blocks.RawHTMLBlock(blank=True, classname='full', icon='code', null=True))], null=True)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Button',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('button_title', models.CharField(max_length=255, null=True)),
                ('button_embed', models.CharField(blank=True, max_length=255, null=True)),
                ('button_link', models.URLField(blank=True, null=True)),
                ('button_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.Page')),
            ],
        ),
    ]
